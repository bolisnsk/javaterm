import java.awt.*;

import java.awt.event.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.awt.event.MouseEvent;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class Frame extends JFrame implements ActionListener, MouseListener{
	JFileChooser chooser=new JFileChooser();
	MenuBar menubar = new MenuBar();
	JLabel label=new JLabel();
	ImagePanel imagePanel=new ImagePanel();
	ButtonPanel button=new ButtonPanel();
	
	Frame(){
		setTitle("Hyeju's photo");
		setSize(1440, 800);
		setBackground(Color.BLACK);
		setLayout(null);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		menubar.open.addActionListener(this);
		menubar.save.addActionListener(this);
		for(int i = 0 ; i < button.btn.length ; i++)
			button.btn[i].addActionListener(this);
		
		add(imagePanel);
		add(button);
		
		setJMenuBar(menubar);
		setVisible(true);
	}
	
	public static void main(String args[]) {
		new Frame();
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource()==menubar.open) 
			openFile();
		if(e.getSource()==menubar.save)
			saveFile();
	}
	
	void openFile() {
		FileNameExtensionFilter filter = new FileNameExtensionFilter("jpeg", "jpeg", "jpg","png");
		chooser.setFileFilter(filter);

		int ret = chooser.showOpenDialog(null);

		if(ret != JFileChooser.APPROVE_OPTION){
			JOptionPane.showMessageDialog(null, "파일을 선택하지 않았습니다.", "경고", JOptionPane.WARNING_MESSAGE);
			return;
		}

		try {
			System.out.println(chooser.getSelectedFile());
			imagePanel.inputimage = ImageIO.read(chooser.getSelectedFile());
			imagePanel.width = imagePanel.inputimage.getWidth();
			imagePanel.height = imagePanel.inputimage.getHeight();
			imagePanel.repaint();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		/*imagePanel.currentColor = new Color[imagePanel.width][imagePanel.height];
		Color color[][] = new Color[imagePanel.width][imagePanel.height];

		for (int i = 0; i < imagePanel.height; i++)
			for (int j = 0; j < imagePanel.width; j++)
				color[j][i] = new Color(imagePanel.inputimage.getRGB(j,  i));*/
        	
	}
	
	
	
	void saveFile() {
		FileNameExtensionFilter filter=new FileNameExtensionFilter("jpg", "png");
		chooser.setFileFilter(filter);
		
		int ret=chooser.showOpenDialog(null);
		if(ret != JFileChooser.APPROVE_OPTION) {
			JOptionPane.showInternalMessageDialog(null, "파일이 저장되지 않았습니다", "경고",
					JOptionPane.WARNING_MESSAGE);
			return;
		}
		try {
			ImageIO.write(imagePanel.outputimage, "jpg", new File(chooser.getSelectedFile().toPath()+ ".jpg"));
			ImageIO.write(imagePanel.outputimage, "png", new File(chooser.getSelectedFile().toPath()+ ".png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	BufferedImage imageToBufferedImage(Image im) {
		if (im instanceof BufferedImage)
		{
			return (BufferedImage) im;
		}
		BufferedImage bi=new BufferedImage(im.getWidth(null),im.getHeight(null),BufferedImage.TYPE_INT_RGB);
		Graphics bg = bi.getGraphics();
		bg.drawImage(im, 0,0,null);
		bg.dispose();
		return bi;
	}
	
	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
}
